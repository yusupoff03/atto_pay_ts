{"version":3,"sources":["../../src/test/auth.test.ts"],"sourcesContent":["// import request from 'supertest';\n// import { App } from '@/app';\n// import pg from '@database';\n// import { CreateCustomerDto } from '@dtos/customer.dto';\n// import { AuthRoute } from '@routes/auth.route';\n//\n// afterAll(async () => {\n//   await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n//   pg.end();\n// });\n//\n// describe('Testing Auth', () => {\n//   describe('[POST] /signup', () => {\n//     it('response should have the Create userData', async () => {\n//       const userData: CreateCustomerDto = {\n//         phone: 'example@phone.com',\n//         password: 'password',\n//       };\n//       const authRoute = new AuthRoute();\n//       const app = new App([authRoute]);\n//\n//       return await request(app.getServer()).post('/signup').send(userData).expect(201);\n//     });\n//   });\n//\n//   describe('[POST] /login', () => {\n//     it('response should have the Set-Cookie header with the Authorization token', async () => {\n//       const userData: CreateCustomerDto = {\n//         phone: 'example1@phone.com',\n//         password: 'password',\n//       };\n//\n//       const authRoute = new AuthRoute();\n//       const app = new App([authRoute]);\n//\n//       return await request(app.getServer())\n//         .post('/login')\n//         .send(userData)\n//         .expect('Set-Cookie', /^Authorization=.+/);\n//     });\n//   });\n// });\n"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,+BAA+B;AAC/B,8BAA8B;AAC9B,0DAA0D;AAC1D,kDAAkD;AAClD,EAAE;AACF,yBAAyB;AACzB,0EAA0E;AAC1E,cAAc;AACd,MAAM;AACN,EAAE;AACF,mCAAmC;AACnC,uCAAuC;AACvC,mEAAmE;AACnE,8CAA8C;AAC9C,sCAAsC;AACtC,gCAAgC;AAChC,WAAW;AACX,2CAA2C;AAC3C,0CAA0C;AAC1C,EAAE;AACF,0FAA0F;AAC1F,UAAU;AACV,QAAQ;AACR,EAAE;AACF,sCAAsC;AACtC,kGAAkG;AAClG,8CAA8C;AAC9C,uCAAuC;AACvC,gCAAgC;AAChC,WAAW;AACX,EAAE;AACF,2CAA2C;AAC3C,0CAA0C;AAC1C,EAAE;AACF,8CAA8C;AAC9C,0BAA0B;AAC1B,0BAA0B;AAC1B,sDAAsD;AACtD,UAAU;AACV,QAAQ;AACR,MAAM"}