{"version":3,"sources":["../../src/test/auth.test.ts"],"sourcesContent":["import request from 'supertest';\nimport { App } from '@/app';\nimport pg from '@database';\nimport { CreateCustomerDto } from '@dtos/customer.dto';\nimport { CustomersRoute } from '@routes/customers.route';\nimport { MerchantRoute } from '@routes/merchant.route';\nimport { Merchant } from '@interfaces/merchant.interface';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n  await pg.end();\n});\nexport let token = '';\ndescribe('Testing Auth', () => {\n  describe('[POST] /register', () => {\n    const customerRoute = new CustomersRoute();\n    const app = new App([customerRoute]);\n    const userData: CreateCustomerDto = {\n      name: 'name',\n      phone: '998949315433',\n      password: 'password12',\n    };\n    it('response should have the Create userData', async () => {\n      const response = await request(app.getServer()).post('/customer/register').send(userData);\n      expect(response.statusCode).toBe(201);\n    });\n    it('validation error', async () => {\n      userData.password = '';\n      const response = await request(app.getServer()).post('/customer/register').send(userData);\n      expect(response.statusCode).toBe(400);\n    });\n  });\n\n  describe('[POST] /login', () => {\n    it('response should have the Set-Cookie header with the Authorization token', async () => {\n      const userData: CreateCustomerDto = {\n        name: 'name',\n        phone: '998949315431',\n        password: 'password12',\n      };\n      const customerRoute = new CustomersRoute();\n      const app = new App([customerRoute]);\n\n      const response = await request(app.getServer()).post('/customer/login').send(userData);\n      expect(response.statusCode).toBe(200);\n    });\n  });\n\n  describe('[POST] /get-login-type', () => {\n    it('password or otp', async () => {\n      const customerRoute = new CustomersRoute();\n      const app = new App([customerRoute]);\n      const phone = '998111111111';\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/customer/getlogin').send({ phone });\n      expect(response.statusCode).toBe(200);\n    });\n  });\n  describe('[POST] /get-login-type', () => {\n    it('password or otp error test', async () => {\n      const customerRoute = new CustomersRoute();\n      const app = new App([customerRoute]);\n      const phone = '998111111';\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/customer/getlogin').send({ phone });\n      expect(response.statusCode).toBe(400);\n    });\n  });\n  describe('[POST] /send verification code', () => {\n    it('verification', async () => {\n      const merchantRoute = new MerchantRoute();\n      const app = new App([merchantRoute]);\n      const email = 'yusupovulugbek73@gmail.com';\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/merchant/sendcode').send({ email });\n      expect(response.statusCode).toBe(200);\n    });\n  });\n  describe('[POST] /sign-up merchant', () => {\n    it('merchant register', async () => {\n      const merchantRoute = new MerchantRoute();\n      const app = new App([merchantRoute]);\n      const merchant: Merchant = {\n        name: 'merchant',\n        email: 'yusupovulugbek73@gmail.com',\n        password: 'aaa1111',\n      };\n      const otp = '218822';\n      const requestBody = { name: merchant.name, email: merchant.email, password: merchant.password, otp: otp };\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/merchant/register').send(requestBody);\n      expect(response.statusCode).toBe(201);\n    });\n  });\n  describe('[POST] /login merchant', () => {\n    it('login merchant', async () => {\n      const merchantRoute = new MerchantRoute();\n      const app = new App([merchantRoute]);\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/merchant/login').send({\n        email: 'yusupovulugbek73@gmail.com',\n        password: 'aaa1111',\n      });\n      expect(response.statusCode).toBe(200);\n      console.log(response.body.token);\n    });\n  });\n  describe('[POST] /sign-up merchant', () => {\n    it('merchant register', async () => {\n      const merchantRoute = new MerchantRoute();\n      const app = new App([merchantRoute]);\n      const merchant: Merchant = {\n        name: 'merchant',\n        email: 'yusupovulugbek73',\n        password: 'aaa1111',\n      };\n      const otp = '557294';\n      const requestBody = { email: merchant.email, name: merchant.name, password: merchant.password, otp: otp };\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/merchant/register').send(requestBody);\n      expect(response.statusCode).toBe(400);\n    });\n  });\n  describe('[POST] /sign-up merchant', () => {\n    it('merchant register', async () => {\n      const merchantRoute = new MerchantRoute();\n      const app = new App([merchantRoute]);\n      const merchant: Merchant = {\n        name: 'merchant',\n        email: 'yusupovulugbek73@gmail.com',\n        password: 'aaa11',\n      };\n      const otp = '557294';\n      const requestBody = { email: merchant.email, name: merchant.name, password: merchant.password, otp: otp };\n      const response = await request(app.getServer().set('x-device-id', 'zeydc-vostro')).post('/merchant/register').send(requestBody);\n      expect(response.statusCode).toBe(400);\n    });\n  });\n});\n"],"names":["token","afterAll","Promise","resolve","setTimeout","pg","end","describe","customerRoute","CustomersRoute","app","App","userData","name","phone","password","it","response","request","getServer","post","send","expect","statusCode","toBe","set","merchantRoute","MerchantRoute","email","merchant","otp","requestBody","console","log","body"],"mappings":"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"}