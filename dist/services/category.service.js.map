{"version":3,"sources":["../../src/services/category.service.ts"],"sourcesContent":["import { Service } from 'typedi';\nimport pg from '@database';\nimport { HttpException } from '@exceptions/httpException';\nimport { Category } from '@interfaces/category.interface';\n@Service()\nexport class CategoryService {\n  public async getAllCategories(lang: string): Promise<Category[]> {\n    const { rows } = await pg.query('select id, code, name -> $1 as name from service_category', [lang]);\n    if (rows[0]) {\n      return rows;\n    }\n    return [];\n  }\n}\n"],"names":["CategoryService","getAllCategories","lang","rows","pg","query","Service"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALW;iEACT;;;;;;;;;;;;IAIFA,kBAAN;IACL,MAAaC,iBAAiBC,IAAY,EAAuB;QAC/D,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,iBAAE,CAACC,KAAK,CAAC,6DAA6D;YAACH;SAAK;QACnG,IAAIC,IAAI,CAAC,EAAE,EAAE;YACX,OAAOA;QACT;QACA,OAAO,EAAE;IACX;AACF;AARaH;IADZM,IAAAA,eAAO;GACKN"}