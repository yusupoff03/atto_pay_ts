{"version":3,"sources":["../../src/middlewares/error.middleware.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { logger } from '@utils/logger';\nimport pg from '@database';\nimport { CustomError } from '@exceptions/CustomError';\nimport { HttpException } from '@exceptions/httpException';\n\nexport const ErrorMiddleware = async (error: HttpException | CustomError, req: Request, res: Response, next: NextFunction) => {\n  const isDevenv = process.env.NODE_ENV === 'development';\n  try {\n    const lang = req.acceptsLanguages('en', 'ru', 'uz') || 'en';\n    const { rows: errorObject } = await pg.query<{ message: string; http_code: number }>(\n      `SELECT message -> $2 AS message, http_code\n       FROM message\n       WHERE name = $1`,\n      [error.name.toUpperCase(), lang],\n    );\n    const status: number = errorObject[0]?.http_code || 500;\n    let message: string = errorObject[0]?.message || 'Something went wrong';\n    let info = error.info;\n    const type = error.name;\n    const details = isDevenv ? error.message : undefined;\n    const stack = isDevenv ? error.stack : undefined;\n\n    switch (error.name) {\n      case 'USER_BLOCKED': {\n        if (errorObject) {\n          info = { ...info, message: errorObject[0].message };\n          message = errorObject[0].message.replace('{0}', error.info?.toString() || '60');\n        }\n      }\n    }\n    logger.error(`[${req.method}] ${req.path} >> StatusCode:: ${status}, Message:: ${message}`);\n    res.status(status).json({ message, status, info, type, details, stack });\n  } catch (err) {\n    next(err);\n  }\n};\n"],"names":["ErrorMiddleware","error","req","res","next","isDevenv","process","env","NODE_ENV","errorObject","lang","acceptsLanguages","rows","pg","query","name","toUpperCase","status","http_code","message","info","type","details","undefined","stack","replace","toString","logger","method","path","json","err"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBALU;iEACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIR,MAAMA,kBAAkB,OAAOC,OAAoCC,KAAcC,KAAeC;IACrG,MAAMC,WAAWC,QAAQC,GAAG,CAACC,QAAQ,KAAK;IAC1C,IAAI;YAQqBC,eACDA;QARtB,MAAMC,OAAOR,IAAIS,gBAAgB,CAAC,MAAM,MAAM,SAAS;QACvD,MAAM,EAAEC,MAAMH,WAAW,EAAE,GAAG,MAAMI,iBAAE,CAACC,KAAK,CAC1C,CAAC;;sBAEe,CAAC,EACjB;YAACb,MAAMc,IAAI,CAACC,WAAW;YAAIN;SAAK;QAElC,MAAMO,SAAiBR,EAAAA,gBAAAA,WAAW,CAAC,EAAE,cAAdA,oCAAAA,cAAgBS,SAAS,KAAI;QACpD,IAAIC,UAAkBV,EAAAA,iBAAAA,WAAW,CAAC,EAAE,cAAdA,qCAAAA,eAAgBU,OAAO,KAAI;QACjD,IAAIC,OAAOnB,MAAMmB,IAAI;QACrB,MAAMC,OAAOpB,MAAMc,IAAI;QACvB,MAAMO,UAAUjB,WAAWJ,MAAMkB,OAAO,GAAGI;QAC3C,MAAMC,QAAQnB,WAAWJ,MAAMuB,KAAK,GAAGD;QAEvC,OAAQtB,MAAMc,IAAI;YAChB,KAAK;gBAAgB;oBACnB,IAAIN,aAAa;4BAEiCR;wBADhDmB,OAAO,wCAAKA;4BAAMD,SAASV,WAAW,CAAC,EAAE,CAACU,OAAO;;wBACjDA,UAAUV,WAAW,CAAC,EAAE,CAACU,OAAO,CAACM,OAAO,CAAC,OAAOxB,EAAAA,cAAAA,MAAMmB,IAAI,cAAVnB,kCAAAA,YAAYyB,QAAQ,OAAM;oBAC5E;gBACF;QACF;QACAC,cAAM,CAAC1B,KAAK,CAAC,CAAC,CAAC,EAAEC,IAAI0B,MAAM,CAAC,EAAE,EAAE1B,IAAI2B,IAAI,CAAC,iBAAiB,EAAEZ,OAAO,YAAY,EAAEE,QAAQ,CAAC;QAC1FhB,IAAIc,MAAM,CAACA,QAAQa,IAAI,CAAC;YAAEX;YAASF;YAAQG;YAAMC;YAAMC;YAASE;QAAM;IACxE,EAAE,OAAOO,KAAK;QACZ3B,KAAK2B;IACP;AACF"}