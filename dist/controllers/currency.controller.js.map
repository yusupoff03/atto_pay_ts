{"version":3,"sources":["../../src/controllers/currency.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { CurrencyService } from '@services/currency,service';\nimport { CurrencyUpdateDto, CurrencyCreateDto } from '@dtos/currency.dto';\nimport { CurrencyInterface } from '@interfaces/currency.interface';\nexport class CurrencyController {\n  public currency = Container.get(CurrencyService);\n  public getCurrency = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { id } = req.body;\n      const currency: CurrencyInterface = await this.currency.getCurrencyById(id);\n      res.status(200).json({\n        data: currency[0],\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public createCurrency = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const currencyDto: CurrencyCreateDto = req.body;\n      const currency: CurrencyInterface = await this.currency.createCurrency(currencyDto);\n\n      res.status(201).json({\n        data: currency,\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public updateCurrency = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const currencyUpdateDto: CurrencyUpdateDto = req.body;\n      const currency: CurrencyInterface = await this.currency.updateCurrency(currencyUpdateDto);\n\n      res.status(201).json({\n        data: currency,\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n  public deleteCurrency = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { id } = req.body;\n      await this.currency.deleteCurrency(id);\n\n      res.status(202).json({\n        message: 'Deleted',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["CurrencyController","currency","Container","get","CurrencyService","getCurrency","req","res","next","id","body","getCurrencyById","status","json","data","error","createCurrency","currencyDto","updateCurrency","currencyUpdateDto","deleteCurrency","message"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBAJa;iCACM;;;;;;;;;;;;;;AAGzB,IAAA,AAAMA,qBAAN,MAAMA;;QACX,uBAAOC,YAAWC,iBAAS,CAACC,GAAG,CAACC,gCAAe;QAC/C,uBAAOC,eAAc,OAAOC,KAAcC,KAAeC;YACvD,IAAI;gBACF,MAAM,EAAEC,EAAE,EAAE,GAAGH,IAAII,IAAI;gBACvB,MAAMT,WAA8B,MAAM,IAAI,CAACA,QAAQ,CAACU,eAAe,CAACF;gBACxEF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAMb,QAAQ,CAAC,EAAE;gBACnB;YACF,EAAE,OAAOc,OAAO;gBACdP,KAAKO;YACP;QACF;QACA,uBAAOC,kBAAiB,OAAOV,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMS,cAAiCX,IAAII,IAAI;gBAC/C,MAAMT,WAA8B,MAAM,IAAI,CAACA,QAAQ,CAACe,cAAc,CAACC;gBAEvEV,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAMb;gBACR;YACF,EAAE,OAAOc,OAAO;gBACdP,KAAKO;YACP;QACF;QACA,uBAAOG,kBAAiB,OAAOZ,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMW,oBAAuCb,IAAII,IAAI;gBACrD,MAAMT,WAA8B,MAAM,IAAI,CAACA,QAAQ,CAACiB,cAAc,CAACC;gBAEvEZ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,MAAMb;gBACR;YACF,EAAE,OAAOc,OAAO;gBACdP,KAAKO;YACP;QACF;QACA,uBAAOK,kBAAiB,OAAOd,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAM,EAAEC,EAAE,EAAE,GAAGH,IAAII,IAAI;gBACvB,MAAM,IAAI,CAACT,QAAQ,CAACmB,cAAc,CAACX;gBAEnCF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBQ,SAAS;gBACX;YACF,EAAE,OAAON,OAAO;gBACdP,KAAKO;YACP;QACF;;AACF"}