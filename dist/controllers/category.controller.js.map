{"version":3,"sources":["../../src/controllers/category.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { CategoryService } from '@services/category.service';\nimport { Category } from '@interfaces/category.interface';\n\nexport class CategoryController {\n  public category = Container.get(CategoryService);\n  public getAllCategory = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const lang = req.acceptsLanguages('en', 'ru', 'uz') || 'en';\n      const result: Category[] = await this.category.getAllCategories(lang);\n      res.status(200).send({\n        count: result.length,\n        categories: result,\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["CategoryController","category","Container","get","CategoryService","getAllCategory","req","res","next","lang","acceptsLanguages","result","getAllCategories","status","send","count","length","categories","error"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBAJa;iCACM;;;;;;;;;;;;;;AAGzB,IAAA,AAAMA,qBAAN,MAAMA;;QACX,uBAAOC,YAAWC,iBAAS,CAACC,GAAG,CAACC,gCAAe;QAC/C,uBAAOC,kBAAiB,OAAOC,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMC,OAAOH,IAAII,gBAAgB,CAAC,MAAM,MAAM,SAAS;gBACvD,MAAMC,SAAqB,MAAM,IAAI,CAACV,QAAQ,CAACW,gBAAgB,CAACH;gBAChEF,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,OAAOJ,OAAOK,MAAM;oBACpBC,YAAYN;gBACd;YACF,EAAE,OAAOO,OAAO;gBACdV,KAAKU;YACP;QACF;;AACF"}