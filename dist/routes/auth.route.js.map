{"version":3,"sources":["../../src/routes/auth.route.ts"],"sourcesContent":["import { Router } from 'express';\nimport { AuthController } from '@controllers/auth.controller';\nimport { CreateCustomerDto } from '@dtos/customer.dto';\nimport { Routes } from '@interfaces/routes.interface';\nimport { AuthMiddleware } from '@middlewares/auth.middleware';\nimport { ValidationMiddleware } from '@middlewares/validation.middleware';\n\nexport class AuthRoute implements Routes {\n  public path = '/auth';\n  public router = Router();\n  public auth = new AuthController();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private initializeRoutes() {\n    // this.router.post('/register', ValidationMiddleware(CreateCustomerDto), this.auth.signUp);\n    // this.router.post('/login', ValidationMiddleware(CreateCustomerDto), this.auth.logIn);\n    this.router.delete('/logout', AuthMiddleware, this.auth.logOut);\n    // this.router.post('/merchant/signup', this.auth.signUpMerchant);\n    // this.router.post('/merchant/login', this.auth.loginMerchant);\n    this.router.get('/get-logintype', this.auth.getCustomerLoginType);\n  }\n}\n"],"names":["AuthRoute","initializeRoutes","router","delete","AuthMiddleware","auth","logOut","get","getCustomerLoginType","constructor","path","Router","AuthController"],"mappings":";;;;+BAOaA;;;eAAAA;;;yBAPU;gCACQ;gCAGA;;;;;;;;;;;;;;AAGxB,IAAA,AAAMA,YAAN,MAAMA;IASHC,mBAAmB;QACzB,4FAA4F;QAC5F,wFAAwF;QACxF,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,WAAWC,8BAAc,EAAE,IAAI,CAACC,IAAI,CAACC,MAAM;QAC9D,kEAAkE;QAClE,gEAAgE;QAChE,IAAI,CAACJ,MAAM,CAACK,GAAG,CAAC,kBAAkB,IAAI,CAACF,IAAI,CAACG,oBAAoB;IAClE;IAXAC,aAAc;QAJd,uBAAOC,QAAO;QACd,uBAAOR,UAASS,IAAAA,eAAM;QACtB,uBAAON,QAAO,IAAIO,8BAAc;QAG9B,IAAI,CAACX,gBAAgB;IACvB;AAUF"}