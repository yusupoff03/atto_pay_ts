{"version":3,"sources":["../../src/routes/customers.route.ts"],"sourcesContent":["import { Router } from 'express';\nimport { CustomersController } from '@controllers/customers.controller';\nimport { CreateCustomerDto, CustomerLoginDto } from '@dtos/customer.dto';\nimport { Routes } from '@interfaces/routes.interface';\nimport { ValidationMiddleware } from '@middlewares/validation.middleware';\nimport { AuthController } from '@controllers/auth.controller';\nimport { AuthMiddleware } from '@middlewares/auth.middleware';\n\nexport class CustomersRoute implements Routes {\n  public path = '/customer';\n  public router = Router();\n  public customer = new CustomersController();\n  public auth = new AuthController();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private initializeRoutes() {\n    this.router.get(`${this.path}/profile`, this.customer.getCustomerById);\n    this.router.post(`${this.path}/register`, ValidationMiddleware(CreateCustomerDto), this.auth.signUp);\n    this.router.post(`${this.path}/services`, AuthMiddleware, this.customer.addServiceToSaved);\n    this.router.delete(`${this.path}/services`, AuthMiddleware, this.customer.deleteServiceFromSaved);\n    this.router.post(`${this.path}/login`, ValidationMiddleware(CustomerLoginDto), this.auth.logIn);\n    this.router.post(`${this.path}/getlogin`, this.auth.getCustomerLoginType);\n    this.router.put(`${this.path}/profile`, AuthMiddleware, this.customer.updateCustomer);\n    this.router.put(`${this.path}/lang`, AuthMiddleware, this.customer.updateCustomerLang);\n    this.router.delete(`${this.path}/delete`, AuthMiddleware, this.customer.deleteCustomer);\n    this.router.get(`${this.path}/get-otp`, this.customer.getOtp);\n  }\n}\n"],"names":["CustomersRoute","initializeRoutes","router","get","path","customer","getCustomerById","post","ValidationMiddleware","CreateCustomerDto","auth","signUp","AuthMiddleware","addServiceToSaved","delete","deleteServiceFromSaved","CustomerLoginDto","logIn","getCustomerLoginType","put","updateCustomer","updateCustomerLang","deleteCustomer","getOtp","constructor","Router","CustomersController","AuthController"],"mappings":";;;;+BAQaA;;;eAAAA;;;yBARU;qCACa;6BACgB;sCAEf;gCACN;gCACA;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,iBAAN,MAAMA;IAUHC,mBAAmB;QACzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACC,eAAe;QACrE,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,CAAC,EAAE,IAAI,CAACH,IAAI,CAAC,SAAS,CAAC,EAAEI,IAAAA,0CAAoB,EAACC,8BAAiB,GAAG,IAAI,CAACC,IAAI,CAACC,MAAM;QACnG,IAAI,CAACT,MAAM,CAACK,IAAI,CAAC,CAAC,EAAE,IAAI,CAACH,IAAI,CAAC,SAAS,CAAC,EAAEQ,8BAAc,EAAE,IAAI,CAACP,QAAQ,CAACQ,iBAAiB;QACzF,IAAI,CAACX,MAAM,CAACY,MAAM,CAAC,CAAC,EAAE,IAAI,CAACV,IAAI,CAAC,SAAS,CAAC,EAAEQ,8BAAc,EAAE,IAAI,CAACP,QAAQ,CAACU,sBAAsB;QAChG,IAAI,CAACb,MAAM,CAACK,IAAI,CAAC,CAAC,EAAE,IAAI,CAACH,IAAI,CAAC,MAAM,CAAC,EAAEI,IAAAA,0CAAoB,EAACQ,6BAAgB,GAAG,IAAI,CAACN,IAAI,CAACO,KAAK;QAC9F,IAAI,CAACf,MAAM,CAACK,IAAI,CAAC,CAAC,EAAE,IAAI,CAACH,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAACM,IAAI,CAACQ,oBAAoB;QACxE,IAAI,CAAChB,MAAM,CAACiB,GAAG,CAAC,CAAC,EAAE,IAAI,CAACf,IAAI,CAAC,QAAQ,CAAC,EAAEQ,8BAAc,EAAE,IAAI,CAACP,QAAQ,CAACe,cAAc;QACpF,IAAI,CAAClB,MAAM,CAACiB,GAAG,CAAC,CAAC,EAAE,IAAI,CAACf,IAAI,CAAC,KAAK,CAAC,EAAEQ,8BAAc,EAAE,IAAI,CAACP,QAAQ,CAACgB,kBAAkB;QACrF,IAAI,CAACnB,MAAM,CAACY,MAAM,CAAC,CAAC,EAAE,IAAI,CAACV,IAAI,CAAC,OAAO,CAAC,EAAEQ,8BAAc,EAAE,IAAI,CAACP,QAAQ,CAACiB,cAAc;QACtF,IAAI,CAACpB,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACkB,MAAM;IAC9D;IAfAC,aAAc;QALd,uBAAOpB,QAAO;QACd,uBAAOF,UAASuB,IAAAA,eAAM;QACtB,uBAAOpB,YAAW,IAAIqB,wCAAmB;QACzC,uBAAOhB,QAAO,IAAIiB,8BAAc;QAG9B,IAAI,CAAC1B,gBAAgB;IACvB;AAcF"}